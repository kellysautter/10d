tzapdmaa.c:   Return Error when calling TABLE cases for Integer and Password.
tzcmcvto.c:zACCEL_TABLE g_AccelTable;
tzcmcvto.c:zACCEL_TABLE *g_lpAT;
tzcmcvto.c:      g_lpAT = (LPACCEL_TABLE) g_lpHotkey;
tzcmcvto.c:            ulLth = sizeof( zACCEL_TABLE );
tzcmcvto.c:            g_usHotkeyLth += sizeof( zACCEL_TABLE );
tzdmupdd.c:   // work attribute to 0 and switch to the TABLEENT_Integer window.
tzdmupdd.c:                               "TZDMUPDD", "TABLEENT_Integer" );
tzdmupdd.c:   // work attribute to 0 and switch to the TABLEENT_Integer window.
tzdmupdd.c:                               "TZDMUPDD", "TABLEENT_Integer" );
tzdmupdd.c:                       zENAME_DOMAIN_TABLEITEM,
tzdmupdd.c:   if ( GetSubtaskForWindowName( vSubtask, &vWindow, "TABLEENT" ) >= 0 ||
tzdmupdd.c:        GetSubtaskForWindowName( vSubtask, &vWindow, "TABLEENT_Integer" ) >= 0 )
tzdmupdd.c:zwTZDMUPDD_TABLEENT_BUTTON_Next( zVIEW    vSubtask )
tzdmupdd.c:zwTZDMUPDD_TABLEENT_BUTTON_Prev( zVIEW    vSubtask )
tzhkeyad.c:   LPACCEL_TABLE lpAT;
tzhkeyad.c:   LPACCEL_TABLE lpAT_Start;
tzhkeyad.c:   lpAT = (LPACCEL_TABLE) SfLockTaskMemory( lpGlobalHotkey );
tzhkeyad.c:      usGlobalHotkeyLth += sizeof( zACCEL_TABLE );
tzhkeyad.c:   zmemset( lpAT, 0xFF, sizeof( zACCEL_TABLE ) ); // terminator
tzhkeyad.c:   usGlobalHotkeyLth += sizeof( zACCEL_TABLE );
tztenvro.c:#define MAX_TABLENAME_LTH       34
tztenvro.c:            nMaxLth = MAX_TABLENAME_LTH;
tzteupdd.c:                       zENAME_DTE_TABLE,
tzvmg2aa.c:#define  MUTABLE_BIT  0x00100000
tzvmg2aa.c:                  psExpr->lFlags |= MUTABLE_BIT;
tzvmp7aa.c:typedef struct sOperTable T_OPER_TABLE;
tzvmp7aa.c:                            T_OPER_TABLE *pOperTable,
tzvmp7aa.c:            T_OPER_TABLE *pOperTable,
tzvmp7aa.c:                     T_OPER_TABLE *pOTab,
tzvmp7aa.c:                    T_OPER_TABLE *pOTab );
tzvmp7aa.c:   T_OPER_TABLE tOperTable[ MAX_OPER_TAB ];
tzvmp7aa.c:   T_OPER_TABLE *pOTab;
tzvmp7aa.c:                    T_OPER_TABLE *pOTab )
tzvmp7aa.c:                     T_OPER_TABLE *pOTab,
tzvmp7aa.c:                            T_OPER_TABLE *pOperTable,
tzvmp7aa.c:            T_OPER_TABLE *pOperTable,
tzvmp7aa.c:   T_OPER_TABLE *pOTab;
